name: Build Android APK (with full logs)

on:
  workflow_dispatch:
  push:
    branches: [ main, principal, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g
      GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx4096m -Dfile.encoding=UTF-8"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Flutter stable
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: stable

      # Si tu avais main.dart / pubspec.yaml Ã  la racine, on les garde, puis on crÃ©e un projet propre
      - name: Stash sources if present
        run: |
          [ -f "main.dart" ] && mv -f main.dart _main.dart || true
          [ -f "pubspec.yaml" ] && mv -f pubspec.yaml _pubspec.yaml || true

      - name: Create fresh Flutter app
        run: flutter create app

      - name: Move skeleton to repo root
        run: |
          shopt -s dotglob
          mv -f app/* .
          rmdir app

      - name: Restore your sources
        run: |
          [ -f "_main.dart" ] && mv -f _main.dart lib/main.dart || true
          [ -f "_pubspec.yaml" ] && mv -f _pubspec.yaml pubspec.yaml || true
          ls -la; ls -la lib; ls -la android

      - name: Flutter pub get
        run: flutter pub get

      # ðŸ‘‰ Patch: forcer mavenCentral() dans build.gradle et settings.gradle
      - name: Ensure mavenCentral repositories
        run: |
          set -e
          # build.gradle (buildscript + allprojects)
          BG="android/build.gradle"
          if [ -f "$BG" ]; then
            awk 'BEGIN{bs=0;ap=0}
                 /buildscript[[:space:]]*\{/ {bs=1}
                 /allprojects[[:space:]]*\{/ {ap=1}
                 {print}
                 bs && /repositories[[:space:]]*\{/ {print "        mavenCentral()"; bs=0}
                 ap && /repositories[[:space:]]*\{/ {print "        mavenCentral()"; ap=0}
            ' "$BG" > tmp && mv tmp "$BG"
          fi

          # settings.gradle (pluginManagement + dependencyResolutionManagement)
          SG="android/settings.gradle"
          if [ -f "$SG" ]; then
            # ajoute mavenCentral() si absent dans chacun des blocs
            grep -q "pluginManagement" "$SG" || true
            sed -i '0,/pluginManagement[[:space:]]*{/{/pluginManagement[[:space:]]*{/!b;:a;n;/repositories[[:space:]]*{/!ba;n;/mavenCentral()/!i\        mavenCentral()' "$SG" || true
            sed -i '0,/dependencyResolutionManagement[[:space:]]*{/{/dependencyResolutionManagement[[:space:]]*{/!b;:a;n;/repositories[[:space:]]*{/!ba;n;/mavenCentral()/!i\        mavenCentral()' "$SG" || true
          fi

          echo "===== settings.gradle ====="
          sed -n '1,120p' android/settings.gradle || true
          echo "===== build.gradle ====="
          sed -n '1,160p' android/build.gradle || true

      - name: Install Android SDK components
        run: |
          SDKMANAGER="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"
          yes | "${SDKMANAGER}" --licenses
          yes | "${SDKMANAGER}" "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Ensure gradlew is executable
        run: chmod +x android/gradlew

      - name: Doctor & versions
        run: |
          flutter --version
          flutter doctor -v
          (cd android && ./gradlew -v)

      - name: Build APK (debug) â€“ capture logs
        run: |
          set -o pipefail
          flutter build apk --debug -v 2>&1 | tee debug-build.log

      - name: Build APK (release) â€“ capture logs
        if: success()
        run: |
          set -o pipefail
          flutter build apk --release -v 2>&1 | tee release-build.log

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: flutter-build-logs
          path: |
            debug-build.log
            release-build.log

      - name: Upload APK (release)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: mattajirs-app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk