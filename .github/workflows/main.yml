name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main, principal, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: Diagnose repo layout
        run: |
          echo "== PWD ==" && pwd
          echo "== Tree (top) ==" && ls -la
          echo "== lib dir ==" && ls -la lib || true
          echo "== android dir ==" && ls -la android || true

      # Si le squelette Flutter n'existe pas, on le crée puis on restaure tes fichiers.
      - name: Ensure Flutter skeleton exists
        run: |
          set -eux
          if [ ! -d "android" ]; then
            # Met de côté tes fichiers si présents à la racine
            [ -f "main.dart" ] && mv -f main.dart _main.dart || true
            [ -f "pubspec.yaml" ] && mv -f pubspec.yaml _pubspec.yaml || true
            flutter create .
            # Restaure dans la bonne structure
            [ -f "_main.dart" ] && mv -f _main.dart lib/main.dart || true
            [ -f "_pubspec.yaml" ] && mv -f _pubspec.yaml pubspec.yaml || true
          fi
          # Affiche l'état final
          echo "== After skeleton =="
          ls -la
          ls -la lib
          ls -la android

      - name: Flutter pub get
        run: flutter pub get

      - name: Build APK (release)
        run: flutter build apk --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: mattajirs-app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk