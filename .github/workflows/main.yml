name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main, principal, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: Diagnose repo layout
        run: |
          echo "== TOP ==" && ls -la || true

      # Sauvegarde éventuelle des sources à la racine
      - name: Stash sources if present
        run: |
          [ -f "main.dart" ] && mv -f main.dart _main.dart || true
          [ -f "pubspec.yaml" ] && mv -f pubspec.yaml _pubspec.yaml || true

      # Crée un projet Flutter propre en sous-dossier puis remonte-le
      - name: Create fresh Flutter app in subdir
        run: |
          flutter create app
          shopt -s dotglob
          mv -f app/* .
          rmdir app

      # Restaure tes fichiers par-dessus le squelette
      - name: Restore your sources
        run: |
          [ -f "_main.dart" ] && mv -f _main.dart lib/main.dart || true
          [ -f "_pubspec.yaml" ] && mv -f _pubspec.yaml pubspec.yaml || true
          echo "== After restore =="
          ls -la
          ls -la lib
          ls -la android

      - name: Flutter pub get
        run: flutter pub get

      # Accepte les licences Android SDK (nécessaire sur runner GitHub)
      - name: Accept Android licenses
        run: yes | "$ANDROID_HOME/tools/bin/sdkmanager" --licenses || true

      # S'assure que la permission INTERNET est bien présente (utile pour WebView)
      - name: Ensure INTERNET permission
        run: |
          MANIFEST="android/app/src/main/AndroidManifest.xml"
          if ! grep -q 'android.permission.INTERNET' "$MANIFEST"; then
            awk '1; /<uses-sdk>/ && !x {print "    <uses-permission android:name=\"android.permission.INTERNET\"/>"; x=1}' "$MANIFEST" > tmp.xml && mv tmp.xml "$MANIFEST"
          fi
          echo "== Manifest =="
          sed -n '1,120p' "$MANIFEST"

      # Build en appelant Gradle directement, logs détaillés
      - name: Build APK (release) via Gradle
        working-directory: android
        run: ./gradlew assembleRelease --no-daemon --stacktrace

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: mattajirs-app-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk