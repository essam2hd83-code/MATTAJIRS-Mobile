name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main, principal, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: Diagnose repo layout
        run: |
          echo "== TOP ==" && ls -la || true

      # Sauvegarder tes fichiers (au cas où)
      - name: Stash sources if present
        run: |
          [ -f "main.dart" ] && mv -f main.dart _main.dart || true
          [ -f "pubspec.yaml" ] && mv -f pubspec.yaml _pubspec.yaml || true

      # Créer un projet Flutter NEUF dans un sous-dossier pour éviter les conflits
      - name: Create fresh Flutter app in subdir
        run: |
          flutter create app
          echo "== app/ created =="
          ls -la app

      # Remonter le squelette au niveau racine
      - name: Move app skeleton to root
        run: |
          shopt -s dotglob
          mv -f app/* .
          rmdir app
          echo "== After move to root =="
          ls -la

      # Remettre tes fichiers par-dessus (si tu les avais au dépôt)
      - name: Restore your sources
        run: |
          [ -f "_main.dart" ] && mv -f _main.dart lib/main.dart || true
          [ -f "_pubspec.yaml" ] && mv -f _pubspec.yaml pubspec.yaml || true
          echo "== Final tree =="
          ls -la
          ls -la lib
          ls -la android

      - name: Flutter pub get
        run: flutter pub get

      - name: Build APK (release)
        run: flutter build apk --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: mattajirs-app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk